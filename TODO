- Add dual-mode MDTM command for xfer backend

- Tests:
  - Proper CHROOT/SOFTCHROOT/LOCKHOME behavior
  - LOGREQUESTS on/off
  - LOGRESPONSES on/off
  - \377 escapes on output
  - CWD into various mode directories
  - RETR from/STOR to various mode directories

- Write a twoftpd log tailing program to output timeout stats and the
  like.

- Look into spying on the status of the servers:
  - exporting status through environment or modifying the command-line
  - get pids by looking for children of tcpserver

- Implement "FEAT" command.

- Handle "SITE UTIME filename atime mtime ctime UTC"(?) comand.

- Handle "SITE CHMOD permissions filename" command.

- Build-in support for gzipping content on-the-fly with zlib:
  - If client requests X.gz, and X exists, open and compress

- Build-in support for gunzipping content on-the-fly with zlib:
  - If client requests X, and X.gz exists, open and decompress

- Build-in support for recursive retrieval producing a tar file internally.

- Look into building a port-20 multiplexor daemon to allow twoftpd-xfer
  to bind to TCP port 20 for PORT commands.
  - Binds to TCP port 20
  - Creates local-domain socket, mode 0600
  - Drops root
  - For each session:
    - twoftpd-auth connects to local socket, and sets
      $TWOFTPD_PORT20_SOCKET_FD
    - twoftpd-xfer sends remote IP/port through socket, if it exists
    - multiplexor ACKs IP/port data
    - multiplexor initiates connection
    - multiplexor sends ack/deny info
    - multiplexor passes connected FD to xfer

- Add IPv6 support.
